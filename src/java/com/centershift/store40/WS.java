
/*
 * 
 */

package com.centershift.store40;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue Mar 08 17:07:55 PST 2011
 * Generated source version: 2.2.9
 * 
 */


@WebServiceClient(name = "WS", 
                  wsdlLocation = "https://slc.centershift.com:443/Store40/SWS.asmx?WSDL",
                  targetNamespace = "http://www.centershift.com/STORE40/") 
public class WS extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.centershift.com/STORE40/", "WS");
    public final static QName WSSoap12 = new QName("http://www.centershift.com/STORE40/", "WSSoap12");
    public final static QName WSSoap = new QName("http://www.centershift.com/STORE40/", "WSSoap");
    static {
        URL url = null;
        try {
            url = new URL("https://slc.centershift.com:443/Store40/SWS.asmx?WSDL");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from https://slc.centershift.com:443/Store40/SWS.asmx?WSDL");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WS() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns WSSoap
     */
    @WebEndpoint(name = "WSSoap12")
    public WSSoap getWSSoap12() {
        return super.getPort(WSSoap12, WSSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSSoap
     */
    @WebEndpoint(name = "WSSoap12")
    public WSSoap getWSSoap12(WebServiceFeature... features) {
        return super.getPort(WSSoap12, WSSoap.class, features);
    }
    /**
     * 
     * @return
     *     returns WSSoap
     */
    @WebEndpoint(name = "WSSoap")
    public WSSoap getWSSoap() {
        return super.getPort(WSSoap, WSSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSSoap
     */
    @WebEndpoint(name = "WSSoap")
    public WSSoap getWSSoap(WebServiceFeature... features) {
        return super.getPort(WSSoap, WSSoap.class, features);
    }

}
